module AICommon
  def self.generate_full_prompt(prompt, lang, theme)
    <<~PROMPT
      Задача: Сгенерировать YAML файл на языке "#{lang}" на тему "#{theme}".

      Структура и требования:
      1. Используйте следующий шаблон в качестве основы:
         #{prompt}

      2. Макросы:
         - Используйте {{keyword1}} и {{keyword2}} в тексте.
         - {{keyword1}} должно встречаться чаще, чем {{keyword2}} (соотношение примерно 70% к 30%).
         - В каждом разделе article вставьте 4-6 макросов.
         - В заголовках используйте 1-2 макроса.
         - Макросы всегда начинаются с маленькой буквы, даже в начале предложения.
         - значения ключей YML бери в двойные кавычки

      3. Количество символов:
         - Строго соблюдайте указанные пределы (например, "300-400 символов").
         - Не указывайте количество символов в конце генерируемого текста.

      4. SEO-оптимизация:
         - Используйте ключевые слова естественным образом в заголовках и подзаголовках.
         - Включайте ключевые слова в первый и последний абзацы текста.
         - Используйте LSI (латентное семантическое индексирование) ключевые слова по теме.

      5. Уникальность контента:
         - Избегайте общих фраз и клише.
         - Включайте специфические примеры, статистику или цитаты по теме "#{theme}".
         - Используйте свежий подход к теме, рассматривая её с необычного угла.

      6. Стиль и тон:
         - Пишите ясным, профессиональным языком.
         - Адаптируйте тон к целевой аудитории (например, формальный для B2B, более разговорный для B2C).
         - Используйте активный залог и избегайте пассивных конструкций.

      7. Формат вывода:
         - Строго следуйте YAML формату.
         - Не включайте комментарии или инструкции в генерируемый контент.
         - Пример:
           key:
             subkey: "Сгенерированный текст с {{keyword1}} и {{keyword2}}"
         - В ответе предоставь только YML формат, без своих замечаний и комментраиев.

      Помните: Генерируемый контент должен быть информативным, привлекательным для читателя и оптимизированным для поисковых систем, при этом оставаясь естественным и легким для чтения.
    PROMPT
  end

  def self.clean_generated_content(content)
    content.gsub(/```yaml|```/, '').strip
  end
end
